/*
- 자바스크립트 엔진

    자바스크립트 엔진은 자바스크립트 코드를 해석하고 실행하는 프로그램 또는 인터프리터. 웹 페이지에 동적 기능을 제공하고 사용자와 상호작용을 하기 위함.

    1. 생성과 컴파일 단계
    - 소스코드 읽기 ( 토큰화 ) : 의미 있는 조각으로 나눔.
    - 구문 분석 ( AST 생성) : 추상구문 트리 생성.
    - 실행 컨텍스트 생성 : 각 실행 컨텍스트는 호출되는 함수에 대한 정보와 환경 관리, 스택 구조에서 관리
    - 렉시컬 환경 및 렉시컬 스코프 결정 : 함수가 호출된 위치가 아닌 선언된 위치에 따라 스코프가 고정되며 이를 통해 각 함수는 선언 시점의 환경을 기억
    - 호이스팅 : 자바스크립트는 변수와 함수가 코드 실행 전에 선언되는 호이스팅 지원.
    1. 실행 단계
    - 바이트 코드 생성 : 낮은 수준의 언어(바이트코드)로 변환
    - 변수 할당과 실행 : 인터프리터와 컴파일러가 변수를 할당 및 함수 실행. 선언되지 않는 변수는 스코프 체인을 통해 상위 컨텍스트에서 변수를 찾음.

    V8 엔진 내부 동작

    V8 엔진은 구글이 개발한 오픈소스 JavaScript 엔진

    동작과정

    1. 파싱 : JavaScript 코드가 입력되면, 파서가 이를 추상 구문 트리로 변환
    2. 바이트코드 변환 : 인터프리터를 통해 바이트코드로 변환
    3. 실행 : 인터프리터가 바이트코드 실행
    4. 최적화 컴파일 : 컴파일러가 자주 실행되는 코드를 네이티브 머신 코드로 변환하여 성능 높임. 최적화가 필요없다고 판단되면 인터프리터 방식으로 진행
    5. 가비지 컬렉션 : 불필요한 객체를 자동으로 제거하여 메모리 최적화
    6. 디옵티마이제이션 : 최적화된 코드가 예상과 다르게 동작할 경우 다시 인터프리터 방식으로 전환하여 안정성 유지

*/
